/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {

    public int helper(TreeNode root, int max, int count){
        if (root.val >= max){count++;Console.WriteLine(root.val);
            max = root.val;
        }
        if (root.left != null){
            count = helper(root.left, max, count);
        }
        if (root.right != null){
            count = helper(root.right, max, count);
        }
        return count;

    }

    public int GoodNodes(TreeNode root) {
        int rootNum = 0;
        if (root is null) return 0;
        else if (root.left is null && root.right is null) return 1;
        else rootNum = root.val;
        return helper(root,rootNum, 0);
    }
}
